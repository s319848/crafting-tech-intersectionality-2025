from sklearn.metrics import accuracy_score, mean_squared_error
import numpy as np

# Inserisci qui i tuoi dati
y_true=[
4,4,4,2,2,2,4,1,2,4,4,4,2,4,5,2,5,
2,2,4,4,2,1,4,1,5,4,5,4,5,5,5,2,4,
4,4,2,4,3,4,2,4,2,4,2,4,5,5,5,2,4,
5,5,4,5,4,5,4,3,4,4,4,4,5,5,4,5,5,
4,5,4,4,4,4,4,5,1,2,2,1,5,5,5,5,5,

2,1,1,1,1,2,1,1,1,1,2,2,1,2,2,1,1,
4,1,3,1,2,1,2,1,1,1,2,1,2,1,4,1,2,
1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,
4,2,4,1,3,2,3,1,4,4,4,1,2,5,5,1,4,
1,1,1,1,1,1,2,1,1,2,1,1,2,4,4,2,1,

5,5,5,5,5,5,5,5,3,3,4,3,5,5,4,5,4,
4,3,3,4,2,3,3,2,3,3,4,4,3,4,4,4,4,
5,4,5,5,2,4,4,4,4,4,4,4,3,2,4,4,4,
4,4,4,4,3,4,4,5,4,4,4,5,2,4,5,4,5,
2,2,2,2,2,2,2,2,2,2,4,2,4,2,2,4,2]


y_pred=[
4,4,4,5,2,5,5,3,5,5,4,4,4,4,4,4,5,
2,4,4,2,2,4,4,2,5,5,5,5,4,4,4,4,5,
5,5,4,5,5,5,4,5,2,4,4,4,4,4,4,4,5,
5,5,4,5,5,5,4,5,2,4,2,2,5,5,5,5,5,
5,5,4,5,5,5,4,5,4,4,3,3,5,5,3,5,5,

5,5,4,5,4,4,4,4,4,4,3,3,3,3,3,5,5,
5,5,4,5,4,4,4,4,2,2,4,4,4,4,4,4,5,
5,5,4,5,4,4,4,4,2,2,4,4,2,4,4,4,5,
5,5,2,5,4,4,4,4,3,3,3,3,3,3,3,4,5,
4,4,3,5,3,3,3,4,3,2,2,2,2,2,2,4,4,

5,5,3,5,5,5,3,4,3,3,3,2,4,4,3,5,5,
4,4,4,5,4,4,4,4,2,3,3,3,3,3,3,4,5,
5,5,4,4,3,3,3,3,4,4,4,4,4,3,4,3,4,
5,5,4,5,4,4,4,5,3,4,4,4,3,3,4,4,5,
4,4,3,2,3,3,3,3,2,2,3,3,4,2,2,4,4]




# Accuracy
accuracy = accuracy_score(y_true, y_pred)

# Adjacent Accuracy (entro ±1 classe)
adjacent_accuracy = np.mean([abs(t - p) <= 1 for t, p in zip(y_true, y_pred)])

# MSE e RMSE
mse = mean_squared_error(y_true, y_pred)
rmse = np.sqrt(mse)

# Stampa dei risultati
print(f"Accuracy: {accuracy:.2%}")
print(f"Adjacent Accuracy (±1): {adjacent_accuracy:.2%}")
print(f"MSE: {mse:.2f}")
print(f"RMSE: {rmse:.2f}")
